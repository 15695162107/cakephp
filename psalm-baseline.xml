<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="3.4.12@86e5e50c1bb492045e70f2ebe1da3cad06e4e9b2">
  <file src="src/Command/I18nExtractCommand.php">
    <UndefinedConstant occurrences="3">
      <code>APP</code>
      <code>APP</code>
      <code>APP</code>
    </UndefinedConstant>
  </file>
  <file src="src/Console/ConsoleIo.php">
    <PossiblyInvalidArgument occurrences="4">
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
      <code>$options</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="4">
      <code>$message</code>
      <code>$message</code>
      <code>$message</code>
      <code>$message</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Console/ConsoleOptionParser.php">
    <PossiblyNullArgument occurrences="1">
      <code>$command</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>parse</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Console/ConsoleOutput.php">
    <PossiblyNullArrayOffset occurrences="2">
      <code>static::$_styles</code>
      <code>static::$_styles</code>
    </PossiblyNullArrayOffset>
  </file>
  <file src="src/Console/HelperRegistry.php">
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$class</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Console/Shell.php">
    <DeprecatedClass occurrences="1">
      <code>new ShellDispatcher($args, false)</code>
    </DeprecatedClass>
    <PossiblyNullArgument occurrences="2">
      <code>$command</code>
      <code>$message</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$command</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Console/TaskRegistry.php">
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$class</code>
    </MoreSpecificImplementedParamType>
  </file>
  <file src="src/Http/Cookie/CookieCollection.php">
    <InvalidScalarArgument occurrences="1">
      <code>$cookie['value']</code>
    </InvalidScalarArgument>
    <PossiblyInvalidArgument occurrences="5">
      <code>$cookie['expires']</code>
      <code>$cookie['path']</code>
      <code>$cookie['domain']</code>
      <code>$cookie['secure']</code>
      <code>$cookie['httponly']</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Shell/Task/CommandTask.php">
    <DeprecatedClass occurrences="1">
      <code>Shell</code>
    </DeprecatedClass>
  </file>
  <file src="src/TestSuite/Constraint/EventFired.php">
    <InternalClass occurrences="1"/>
  </file>
  <file src="src/TestSuite/Constraint/EventFiredWith.php">
    <InternalClass occurrences="2"/>
  </file>
  <file src="src/TestSuite/Constraint/Response/ResponseBase.php">
    <InternalClass occurrences="1">
      <code>new AssertionFailedError('No response set, cannot assert content.')</code>
    </InternalClass>
  </file>
  <file src="src/TestSuite/Constraint/Session/FlashParamEquals.php">
    <InternalClass occurrences="1">
      <code>new AssertionFailedError($message)</code>
    </InternalClass>
  </file>
  <file src="src/TestSuite/Constraint/Session/SessionEquals.php">
    <InternalClass occurrences="1">
      <code>new AssertionFailedError('There is no stored session data. Perhaps you need to run a request?')</code>
    </InternalClass>
  </file>
  <file src="src/TestSuite/Fixture/FixtureInjector.php">
    <DeprecatedInterface occurrences="1">
      <code>FixtureInjector</code>
    </DeprecatedInterface>
  </file>
  <file src="src/TestSuite/LegacyShellDispatcher.php">
    <DeprecatedClass occurrences="2">
      <code>ShellDispatcher</code>
      <code>parent::__construct($args, $bootstrap)</code>
    </DeprecatedClass>
  </file>
  <file src="src/TestSuite/TestSuite.php">
    <InternalClass occurrences="1">
      <code>BaseTestSuite</code>
    </InternalClass>
    <InternalMethod occurrences="2">
      <code>addTestFile</code>
      <code>addTestFile</code>
    </InternalMethod>
  </file>
  <file src="src/Utility/CookieCryptTrait.php">
    <InvalidScalarArgument occurrences="2">
      <code>$mode</code>
      <code>$mode</code>
    </InvalidScalarArgument>
    <PossiblyInvalidArgument occurrences="1">
      <code>$encrypt</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$cipher</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Utility/Hash.php">
    <PossiblyInvalidArgument occurrences="15">
      <code>$keys</code>
      <code>$keys</code>
      <code>$vals</code>
      <code>$keys</code>
      <code>$vals</code>
      <code>$data[0]</code>
      <code>$data[$i]</code>
      <code>$sortValues</code>
      <code>$sortValues</code>
      <code>$sortValues</code>
      <code>$values</code>
      <code>$values</code>
      <code>$keys</code>
      <code>$keys</code>
      <code>$ids</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArrayOffset occurrences="2">
      <code>$out</code>
      <code>$out</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullOperand occurrences="2">
      <code>$path</code>
      <code>$path</code>
    </PossiblyNullOperand>
    <TypeDoesNotContainType occurrences="1">
      <code>is_array($path)</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Utility/Inflector.php">
    <NullableReturnStatement occurrences="4">
      <code>static::$_cache['pluralize'][$word]</code>
      <code>static::$_cache['pluralize'][$word]</code>
      <code>static::$_cache['singularize'][$word]</code>
      <code>static::$_cache['singularize'][$word]</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Utility/Security.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>static::$_instance</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>\Cake\Utility\Crypto\OpenSsl</code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/Utility/Text.php">
    <InvalidArgument occurrences="2">
      <code>$hashVal</code>
      <code>$tmpHash</code>
    </InvalidArgument>
    <PossiblyInvalidArgument occurrences="1">
      <code>mb_internal_encoding()</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="1">
      <code>transliterator_create($transliteratorId)</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Utility/Xml.php">
    <PossiblyUndefinedMethod occurrences="1">
      <code>setAttributeNS</code>
    </PossiblyUndefinedMethod>
  </file>
</files>
